for循环

for i in  :
range(10)  生成列表[0,1,2,3,4,5,6,7,8,9,]
range(6,10)  生成[6,7,8,9,]

例如：
       range(5)
print(list(range(5)))          //用list函数 把range(5) 转换成列表
得到 [0, 1, 2, 3, 4]  

for i in range(3):                  #[0,1,2]  外侧循环控制打印哪一行
    for j in range(i+1):            #[0] [0,1] [0,1,2] 内层循环控制行内打印几次
        print("hello",end=" ")     #多个hello打印到同一行
        print(j)
    print()                                 #每一行结尾需要打印回车，否则就成为一行


"%sX%s=%s"  %(1,2,2)    #得到 1X2=2   注释符里面不可以加变量可以加 字符串输出%s占位

打印9*9 乘法表
for i in range(1,10):
    for j in range(1,i+1):
        print("%sx%s=%s" %(j,i,i*j),end="\t")   
    print()

---------------------------------------------------------------------------------------------------------

列表解析：快速生成列表
[10]      得到[10]
[10+5]  得到[15]
[10+5 for i in range(1,11)]   得到 [15, 15, 15, 15, 15, 15, 15, 15, 15, 15] 

[10+i  for i in range(1,11)]   得到 [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

[10+i  for i in range(1,11) if i % 2 == 1]  得到  [11, 13, 15, 17, 19]

["192.168.1."+str(i) for i in range(1,5)]  得到  ['192.168.1.1', '192.168.1.2', '192.168.1.3', '192.168.1.4'] 


---------------------------------------------------------------------------------------------------------
文件对象

文件操作的基本步骤：打开、读写、关闭

open及file          file Python2才有，Python3已经不用了，用open 
open  read  readline readlines close 

在Linux服务器操作
cp /etc/hosts    /tmp/hosts
#打开文件，没有指定打开方式，默认以r 读的方式打开，以r打开，不能写。文件不存在则报错
python3
f = open("/tmp/hosts")     #默认加r打开了
data = f.read()             # read 默认将全部内容读入内存    
f.close()                      #关闭文件
print(data) 
data                    #可以查看到原始数据，也就是\n 没有被转换成换行。


f = open("/tmp/hosts")         
f.read(10)              #读取10个字节
f.read(10)              #继续向后读10个字节
f.readline()            #读一行
f.readlines()           #所有的行读出来放到列表中，每一行是列表的一项
f.close()      

f = open("/bin/ls","rb")   #打开文本文件，必须明确指定是b(bytes) 二进制文件要加b，要不会报错
f.wirte("jsdf")                   #报错  ，以r打开不能写入只能读
f.read(10)                        
f.close()  

f = open("/tmp/zhuji","w")     #以w打开文件，文件不存在则创建，存在则清空  （慎用）
f = open("/tmp/zhuji","wb")    #清空或者创建可以写入图片  
f.write("hello world!\n")            #写入13个字节
f.flush()                                    #立即将数据写入硬盘，否则将会暂存在缓冲区
f.wirtelines(["2nd line.\n","3rd line.\n"])      
f.wirte(100)                 #报错，只能将字符写到文件，不能是其他数据
f.close()


f =open("/tmp/zhuji","a"）   #a是追加方式打开(为了打开可以写入不清空)
f.wirte("new line.\n")        


seek 和tell方法不常用，选修
f = open("/tmp/zhuji","r+")    #以读写方式打开 
f.write("abcde")                      #abcde 将会在开头把原文件覆盖
f.tell()                                    #获取文件指针的位置
f.read(8)                                 #从文件指针开始的位置向后读8个字符
f.seek(3,0)                               #将文件指针称动到开头偏移3个字节
f.read(2)                                   #读文件第4、5 个字符  
f.seek(0,2)                                 #移动指针到文件结尾
f.write("my test.\n")      
f.flush()                                               
f.read()                                     #因为已经到文件结尾，所有读到的是空串
f.seek(0,0)                                 #移动指针到文件开头
f.readline()                                #读第一行的内容  














